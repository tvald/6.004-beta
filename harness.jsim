// Design Project w/ beta implemention as described in lab handouts

.include "projcheckoff.jsim"

// matches .subckt above w/ IRQ tied to ground
Xbeta clk reset 0 ia[31:0] id[31:0] ma[31:0] moe mrd[31:0] wr mwd[31:0] beta

// your memory must also be called Xmem (so the checkoff code can find it!) but
// can have a different number of ports. It should however be initialized with
// the contents shown below -- the benchmark suite. A file containing these
// values can be found at /mit/6.004/jsim/projcheckoff.bin.
Xmwd wr#32 mwd[31:0] md[31:0] tristate
Xmrd md[31:0] mrd[31:0] cnxn
Xmem
+ vdd 0 0 ia[11:2] id[31:0]
+ moe clk wr ma[11:2] md[31:0]
+ $memory width=32 nlocations=1024
+ file="projcheckoff.bin"


// Run the simulation for 1205 cycles. Your design might require more or less
// cycles depending on how it executes instructions. Run only as long as necessary
// to complete the benchmark since the ending simulation time is used to compute
// your circuit?s Benmark
Vreset reset 0 pwl(0ns 3.3v, 9ns 3.3v, 9.1ns 0v)

// BENMARK:
// 1e-10/([area]e-12*[ns]e-9)

// BMK = 45.02 @ 310414 mc2
Vclk clk 0 pulse(3.3,0,3.42ns,.01ns,.01ns,3.42ns)
.tran 7155ns

// BMK = 43.75 @ 310371 mc2
//Vclk clk 0 pulse(3.3,0,3.52ns,.01ns,.01ns,3.52ns)
//.tran 7364ns

// BMK = 40.18 @ 293789 mc2
//Vclk clk 0 pulse(3.3,0,4.23ns,.01ns,.01ns,4.23ns)
//.tran 8472ns

// BMK = 39.47 @ 299054 mc2
//Vclk clk 0 pulse(3.3,0,4.23ns,.01ns,.01ns,4.23ns)
//.tran 8472ns

// BMK = 36.69 @ 288499 mc2
//Vclk clk 0 pulse(3.3,0,4.23ns,.01ns,.01ns,4.23ns)
//.tran 9448ns

// BMK = 34.90 @ 285489 mc2
//Vclk clk 0 pulse(3.3,0,4.49ns,.01ns,.01ns,4.49ns)
//.tran 10036ns

// BMK = 28.24 @ 280753 mc2
//Vclk clk 0 pulse(3.3,0,5.65ns,.01ns,.01ns,5.65ns)
//.tran 12612ns

// BMK = 24.97 @ 276387 mc2
//Vclk clk 0 pulse(3.3,0,4ns,.01ns,.01ns,7.67ns)
//.tran 14489ns

// BMK = 22.36 @ 308659 mc2
//Vclk clk 0 pulse(3.3,0,4ns,.01ns,.01ns,7.67ns)
//.tran 14489ns



.plot clk
//.plot reset
//.plot Xbeta.Xbeta1.annul
//.plot Xbeta.Xbeta1.stall

//* ops and registers *
.plot ia[31:0]
.plot betaop(Xbeta.if_ir[31:26])
.plot betaop(Xbeta.exe_ir[31:26])
.plot betaop(Xbeta.mem_ir[31:26])
//.plot reg(Xbeta.Xbeta2.Xregfile.ra[4:0])
//.plot reg(Xbeta.Xbeta2.Xregfile.rb[4:0])
//.plot reg(Xbeta.Xbeta2.Xregfile.rc[4:0])
//*/

.plot Xbeta.Xbeta1.Xbr.z
.plot Xbeta.Xbeta1.Xbr.br_miss
.plot Xbeta.Xbeta1.Xbr.br_annul
.plot Xbeta.Xbeta1.annul
.plot Xbeta.Xbeta1.id[31:0]
.plot Xbeta.if_ir[31:0]
.plot Xbeta.st_ir[31:0]


/*
.plot Xbeta.Xbeta1.Xbr.z
.plot Xbeta.Xbeta1.Xbr.br_miss
.plot Xbeta.Xbeta1.Xbr.miss_pc[31:0]
.plot Xbeta.Xbeta1.Xbr.stall
.plot Xbeta.Xbeta1.Xbr.last_flag
.plot Xbeta.Xbeta1.Xbr.br_annul
.plot Xbeta.Xbeta1.Xpc.br_pc[31:2]
.plot Xbeta.Xbeta1.Xpc.__d[31:2]
.plot Xbeta.Xbeta1.Xpc._d[31:2]
.plot Xbeta.Xbeta1.Xpc.d[31:2]
*/

/* all registers *
.plot ia[31:0]
.plot betaop(Xbeta.if_ir[31:26])
.plot betaop(Xbeta.exe_ir[31:26])
.plot betaop(Xbeta.mem_ir[31:26])
.plot Xbeta.Xbeta1.Xpc.d[31:2]
.plot Xbeta.Xbeta1.Xbr.st_flag
.plot Xbeta.Xbeta1.Xbr.st_pred
.plot Xbeta.Xbeta1.Xbr.st_pc[31:2]
.plot Xbeta.Xbeta1.Xbr.st_pcr[31:2]
.plot Xbeta.st_ir[31:0]
.plot Xbeta.exe_pc[31:2]
.plot Xbeta.exe_wd[31:0]
.plot Xbeta.exe_alu[31:0]
.plot Xbeta.an_exe_ir[31:0]
//*/

//.plot Xbeta.Xbeta1.br_annul
//.plot Xbeta.Xbeta1.pc_annul
//.plot Xbeta.Xbeta1.br_annul Xbeta.Xbeta1.pc_annul
//.plot _
//.plot id[31:0]
//.plot moe
//.plot wr
//.plot ma[11:2]
//.plot md[31:0]
//.plot Xbeta.Xbeta1.pc[31:0]
//.plot Xbeta.Xbeta1.pcr[31:0]

//.plot reg(Xbeta.Xbeta2.Xregfile.wa[4:0])
//.plot reg(Xbeta.Xbeta2.Xregfile.ra[4:0])
//.plot Xbeta.Xbeta2.Xregfile.adata[31:0]
//.plot Xbeta.Xbeta2.Xregfile.bypa
//.plot Xbeta.Xbeta2.Xregfile.yadata[31:0]
//.plot Xbeta.Xbeta2.radata[31:0]
//.plot Xbeta.Xbeta1.Xbr.z

//.plot Xbeta.Xbeta1.Xbr.br_annul
//.plot Xbeta.Xbeta1.br_pc[31:0]
//.plot Xbeta.pcsel[1:0]

//.plot Xbeta.Xbeta1.br_annul
//.plot Xbeta.Xbeta1.pc_annul
//.plot Xbeta.Xbeta2.Xregfile.Xbypctl.mem_op[31:26]
//.plot Xbeta.Xbeta2.Xregfile.Xbypctl.byp_flag
//.plot Xbeta.Xbeta1.stall

//.plot Xbeta.Xbeta2.alufn[5:0]
//.plot Xbeta.Xbeta2.Xregfile.bypa
//.plot Xbeta.Xbeta2.Xregfile.bypb
//.plot Xbeta.Xbeta2.Xregfile.Xbypctl.ra_match
//.plot Xbeta.Xbeta2.Xregfile.Xbypctl.ra_not31
//.plot Xbeta.Xbeta2.Xregfile.adata[31:0]
//.plot Xbeta.Xbeta2.Xregfile.bdata[31:0]

//.plot Xbeta.Xbeta1.Xbr.z
//.plot Xbeta.Xbeta2.Xregfile.bypa
//.plot Xbeta.Xbeta2.Xregfile.bypb
//.plot Xbeta.mem_alu[31:0]
//.plot Xbeta.Xbeta3.wdsel[1:0]
//.plot Xbeta.Xbeta2.Xregfile.adata[31:0]
//.plot reg(Xbeta.Xbeta3.wa_rc[4:0])
//.plot reg(Xbeta.Xbeta2.Xregfile.wa[4:0])
//.plot Xbeta.Xbeta2.Xregfile.wdata[31:0]
//.plot Xbeta.Xbeta2.Xregfile.werf
//.plot Xbeta.Xbeta2.Xregfile.yadata[31:0]

//.plot _
//.plot reg(id[20:16])
//.plot reg(id[15:11])
//.plot reg(id[25:21])
//.plot _
//.plot ia[31:0]
//.plot Xbeta.Xbeta1.pc[31:0]
//.plot Xbeta.Xbeta1.id[31:0]
//.plot Xbeta.Xbeta1.pcr[31:0]
//.plot Xbeta.Xbeta1.Xbr.pred_pc[31:0]
//.plot Xbeta.Xbeta1.br_pc[31:0]
//.plot Xbeta.Xbeta1.Xbr.br_flag
//.plot Xbeta.Xbeta1.Xbr.br_pred
//.plot Xbeta.Xbeta1.Xbr.br_annul

//.plot id[31:0]
//.plot _

//.plot Xbeta.Xbeta2.ir[31:0]
//.plot Xbeta.Xbeta2.Xregfile.ra2mux[4:0]
//.plot Xbeta.Xbeta2.Xregfile.bdata[31:0]
//.plot Xbeta.Xbeta2.radata[31:0]
//.plot Xbeta.Xbeta2.ra2sel
//.plot Xbeta.Xbeta2.rbdata[31:0]
//.plot Xbeta.Xbeta2.b[31:0]
//.plot Xbeta.Xbeta2.alufn[5:0]
//.plot Xbeta.Xbeta2.alu[31:0]
//.plot ma[31:0]
//.plot mrd[31:0]
//.plot Xbeta.Xbeta2.wdata[31:0]
//.plot Xbeta.Xbeta2.wdsel[1:0]
//.plot _
//.plot moe
//.plot wr
//.plot mwd[31:0]
//.plot reg(id[20:16])
//.plot reg(id[15:11])
//.plot reg(id[25:21])
//.plot Xbeta.radata[31:0]
//.plot Xbeta.z